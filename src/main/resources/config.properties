###
# **************************************************-
# ingrid-iplug-csw-dsc:war
# ==================================================
# Copyright (C) 2014 wemove digital solutions GmbH
# ==================================================
# Licensed under the EUPL, Version 1.1 or â€“ as soon they will be
# approved by the European Commission - subsequent versions of the
# EUPL (the "Licence");
#
# You may not use this work except in compliance with the Licence.
# You may obtain a copy of the Licence at:
#
# http://ec.europa.eu/idabc/eupl5
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the Licence is distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the Licence for the specific language governing permissions and
# limitations under the Licence.
# **************************************************#
###
# if true, then show the indexing menu in the web-administration
indexing=true

# set the ranking type of this iPlug
plugdescription.ranking=score

# the default datatypes of this plugin
plugdescription.dataType=csw,dsc_csw,IDF_1.0

# Fetching: The number of retries of a specific GetRecords request on failure (requesting a specific chunk of records)
numRetriesPerRequest=3

# Fetching: The time to wait between retry of a specific GetRecords request in MILLISECONDS.
# NOTICE: Is multiplied with the number of retries. So last retry starts after numRetriesPerRequest * timeBetweenRetries
# 0 causes immediate retries !
timeBetweenRetries=1000

# Fetching: How many failed requests (leading to a loss of records) should we tolerate ?
# 0 causes abort of fetching as soon as a chunk of records is lost !
# -1 means we tolerate all failed requests, this only makes sense if we have successful requests in between !
# Or just enter an arbitrary number. If that number of failed requests (lost chunks of records) is reached the fetching process is ended.
maxNumSkippedRequests=0

# the TCP address of the Elasticsearch Cluster
elastic.remoteHosts=${ELASTIC_HOSTS:localhost:9200}

# Read timeout for HTTP connections in MILLISECONDS. Defaults to 10000 ms.
#httpReadTimeout=10000
